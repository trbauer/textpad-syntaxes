; For SASS assembly

C=1

[Syntax]
Namespace1 = 6
IgnoreCase = No
KeyWordLength =
BracketChars = {[()]}
OperatorChars = -+*/<>!~%^&|=
PreprocStart = #
SyntaxStart =
SyntaxEnd =
HexPrefix = 0x
CommentStart = /*
CommentEnd = */
CommentStartAlt =
CommentEndAlt =
SingleComment = //
SingleCommentCol =
SingleCommentAlt =
SingleCommentColAlt =
SingleCommentEsc =
StringsSpanLines = Yes
StringStart = "
StringEnd = "
StringAlt =
StringEsc = \
CharStart = '
CharEnd = '
CharEsc = \

[Preprocessor keywords]
#define
#elif
#else
#endif
#error
#if
#ifdef
#ifndef
#include
#pragma
#undef
defined

[Keywords 1]
ARRIVES
ATOM
ATOMG
ATOMS
B2R
BAR
BMOV
BMSK
BPT
BRA
BREAK
BREV
BRK
BRX
BRXU
BSSY
BSYNC
CAL
CALL
CCTL
CS2R
CSETP
DADD
DEPBAR
DFMA
DMMA
DMUL
DSETP
ERRBAR
EXIT
F2F
F2FP
F2I
F2IP
FADD
FCHK
FFMA
FLO
FMNMX
FMUL
FRND
FSEL
FSET
FSETP
HADD2
HFMA2
HMMA
HMUL2
HSET2
HSETP2
I2F
I2FP
I2I
I2IP
IABS
IADD
IADD3
IADD32I
ICMP
IDP
IMAD
IMMA
IMNMX
IMUL
IMUL32I
ISCADD
ISETP
ISUB
LD
LDC
LDG
LDGDEPBAR
LDGSTS
LDL
LDS
LDSM
LEA
LEPC
LOP
LOP3
LOP32I
MEMBAR
MOV
MOV32I
MOVM
MUFU
NANOSLEEP
NOP
P2R
PBK
PLOP3
POPC
PRMT
PSETP
QSPC
R2B
R2P
R2UR
RED
REDUX
RET
S2R
S2UR
SEL
SGXT
SHF
SHFL
SHL
SHR
SSY
ST
STG
STL
STS
SULD
SUST
TEX
TLD
TXQ
UBMSK
UFLO
UIADD3
UIMAD
UISETP
ULDC
ULEA
ULOP3
UMOV
UPLOP3
UPOPC
UPRMT
USEL
USGXT
USHF
VABSDIFF
VOTE
VOTEU
WARPSYNC
YIELD

[Keywords 2]
;;;;;;;;;;;;;;;;;;;;;;
;
B0
B1
B2
B3
B4
B5
B6
B7
B8
B9
B10
B11
B12
B13
B14
B15
;
; general registers
R0
R1
R2
R3
R4
R5
R6
R7
R8
R9
R10
R11
R12
R13
R14
R15
R16
R17
R18
R19
R20
R21
R22
R23
R24
R25
R26
R27
R28
R29
R30
R31
R32
R33
R34
R35
R36
R37
R38
R39
R40
R41
R42
R43
R44
R45
R46
R47
R48
R49
R50
R51
R52
R53
R54
R55
R56
R57
R58
R59
R60
R61
R62
R63
R64
R65
R66
R67
R68
R69
R70
R71
R72
R73
R74
R75
R76
R77
R78
R79
R80
R81
R82
R83
R84
R85
R86
R87
R88
R89
R90
R91
R92
R93
R94
R95
R96
R97
R98
R99
R100
R101
R102
R103
R104
R105
R106
R107
R108
R109
R110
R111
R112
R113
R114
R115
R116
R117
R118
R119
R120
R121
R122
R123
R124
R125
R126
R127
R128
R129
R130
R131
R132
R133
R134
R135
R136
R137
R138
R139
R140
R141
R142
R143
R144
R145
R146
R147
R148
R149
R150
R151
R152
R153
R154
R155
R156
R157
R158
R159
R160
R161
R162
R163
R164
R165
R166
R167
R168
R169
R170
R171
R172
R173
R174
R175
R176
R177
R178
R179
R180
R181
R182
R183
R184
R185
R186
R187
R188
R189
R190
R191
R192
R193
R194
R195
R196
R197
R198
R199
R200
R201
R202
R203
R204
R205
R206
R207
R208
R209
R210
R211
R212
R213
R214
R215
R216
R217
R218
R219
R220
R221
R222
R223
R224
R225
R226
R227
R228
R229
R230
R231
R232
R233
R234
R235
R236
R237
R238
R239
R240
R241
R242
R243
R244
R245
R246
R247
R248
R249
R250
R251
R252
R253
R254
R255
RZ
;
P0
P1
P2
P3
P4
P5
P6
PT
;
SB0
SB1
SB2
SB3
SB4
SB5
;
SR_LANEID
SR_CLOCK
SR_VIRTCFG
SR_VIRTID
SR_ORDERING_TICKET
SR_PRIM_TYPE
SR_INVOCATION_ID
SR_Y_DIRECTION
SR_THREAD_KILL
SM_SHADER_TYPE
SR_DIRECTCBEWRITEADDRESSLOW
SR_DIRECTCBEWRITEADDRESSHIGH
SR_DIRECTCBEWRITEENABLED
SR_MACHINE_ID_0
SR_MACHINE_ID_1
SR_MACHINE_ID_2
SR_MACHINE_ID_3
SR_AFFINITY
SR_INVOCATION_INFO
SR_WSCALEFACTOR_XY
SR_WSCALEFACTOR_Z
SR_TID
SR_CTAID
SR_NTID
SR_CirQueueIncrMinusOne
SR_NLATC
SR_SM_SPA_VERSION
SR_MULTIPASSSHADERINFO
SR_LWINHI
SR_SWINHI
SR_SWINLO
SR_SWINSZ
SR_SMEMSZ
SR_SMEMBANKS
SR_LWINLO
SR_LWINSZ
SR_LMEMLOSZ
SR_LMEMHIOFF
SR_EQMASK
SR_LTMASK
SR_LEMASK
SR_GTMASK
SR_GEMASK
SR_REGALLOC
SR_BARRIERALLOC
SR_GLOBALERRORSTATUS
SR_WARPERRORSTATUS
SR_VIRTUALSMID
SR_VIRTUALENGINEID
SR_CLOCKLO
SR_CLOCKHI
SR_GLOBALTIMERLO
SR_GLOBALTIMERHI
SR_ESR_PC
SR_ESR_PC_HI
SR_HWTASKID
SR_CIRCULARQUEUEENTRYINDEX
SR_CIRCULARQUEUEENTRYADDRESSLOW
SR_CIRCULARQUEUEENTRYADDRESSHIGH
SR_PM0
SR_PM_HI0
SR_PM1
SR_PM_HI1
SR_PM2
SR_PM_HI2
SR_PM3
SR_PM_HI3
SR_PM4
SR_PM_HI4
SR_PM5
SR_PM_HI5
SR_PM6
SR_PM_HI6
SR_PM7
SR_PM_HI7
SR_SNAP_PM0
SR_SNAP_PM_HI0
SR_SNAP_PM1
SR_SNAP_PM_HI1
SR_SNAP_PM2
SR_SNAP_PM_HI2
SR_SNAP_PM3
SR_SNAP_PM_HI3
SR_SNAP_PM4
SR_SNAP_PM_HI4
SR_SNAP_PM5
SR_SNAP_PM_HI5
SR_SNAP_PM6
SR_SNAP_PM_HI6
SR_SNAP_PM7
SR_SNAP_PM_HI7
SRZ
;
UR0
UR1
UR2
UR3
UR4
UR5
UR6
UR7
UR8
UR9
UR10
UR11
UR12
UR13
UR14
UR15
UR16
UR17
UR18
UR19
UR20
UR21
UR22
UR23
UR24
UR25
UR26
UR27
UR28
UR29
UR30
UR31
UR32
UR33
UR34
UR35
UR36
UR37
UR38
UR39
UR40
UR41
UR42
UR43
UR44
UR45
UR46
UR47
UR48
UR49
UR50
UR51
UR52
UR53
UR54
UR55
UR56
UR57
UR58
UR59
UR60
UR61
UR62
URZ
;
UP0
UP1
UP2
UP3
UP4
UP5
UP6
UPT
;
;;;;;;;;;;;;;;;;;;;;;;
; I2I, LD, etc...
S8
S16
S32
S64
U8
U16
U32
U64
F16
F16x2
BF16
TF32
F32
F64
;;;;;;;;;;;;;;;;;;;;;;
; ISETP/DSETP/FSETP
LE
LT
GE
GT
EQ
NE
;
LEU
LTU
GEU
GTU
EQU
NEU
;
NUM
NAN
MIN
MAX
;;;;;;;;;;;;;;;;;;;;;;
; SHFL
UP
DOWN
IDX
BFLY
;;;;;;;;;;;;;;;;;;;;;;
; PRMT
F4E
B4E
RC8
ECL
ECR
RC16
;;;;;;;;;;;;;;;;;;;;;;
; *SETP, LOP
AND
OR
XOR
;;;;;;;;;;;;;;;;;;;;;;
; IMAD
HI
LO
X
WIDE
;;;;;;;;;;;;;;;;;;;;;;
; F2I
CEIL
TRUNC
FLOOR
FTZ
;;;;;;;;;;;;;;;;;;;;;;
; BAR.SYNC
SYNC
;;;;;;;;;;;;;;;;;;;;;;
; MUFU
COS
SIN
EX2
LG2
RCP
RCP64H
RSQ
RSQ64H
SQRT
TANH
;;;;;;;;;;;;;;;;;;;;;;
; e.g. ISCADD R13.CC ...
CC
;;;;;;;;;;;;;;;;;;;;;;
; misc stuff
ABS
ADD
ALL
ANY
ARRIVE
ARV
B
BYPASS
CAS
CAST
CLEAR
COL
CONSTANT
CONSTANT
CTA
DEC
DEFER_BLOCKING
E
EF
EL
EU
EX
EXCH
EXCLUSIVE
GPU
H0_H0
H1_H1
INC
INF
INT
L
LDGSTSBAR
LL
LTC128B
LU
LUT
M88
MMA
MMIO
MT88
NA
NAN
NODEP
NTZ
PACK_AB
PASS_B
PQUAD
PR
PRIVATE
R
REL
RESULT
RM
RN
ROW
RP
RZ
S
SAT
SH
SM
SPIN
STRONG
STRONG
SUM
SX32
SYNCALL
SYS
TRAP
VC
W
X4
X8
X16
ZFILL
;
reuse