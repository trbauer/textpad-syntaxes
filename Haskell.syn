; TextPad syntax definitions for Haskell

C=1

[Syntax]
Namespace1 = 6
IgnoreCase = No
InitKeyWordChars = A-Za-z_
KeyWordChars = A-Za-z0-9_'
BracketChars = {[()]}
OperatorChars = -+*/<>=!^$&|:,%~
PreprocStart =
SyntaxStart =
SyntaxEnd =
HexPrefix =
CommentStart = {-
CommentEnd = -}
CommentStartAlt =
CommentEndAlt =
SingleComment = --
SingleCommentCol =
SingleCommentAlt =
SingleCommentColAlt =
SingleCommentEsc =
StringsSpanLines = No
StringStart = "
StringEnd = "
StringAlt =
StringEsc = \
CharStart = '
CharEnd = '
CharEsc = \

[Keywords 1]
case
class
data
deriving
do
elif
else
endif
export
if
ifdef
ifndef
import
in
infix
infixl
infixr
instance
let
module
newtype
of
primitive
then
type
where

[Keywords 2]
Eq
Ord
Enum
Bounded
Num
Ix
Real
Integral
RealFrac
RealFloat
Floating
Fractional
Read
Show
Functor
Monad
True
False
Bool
Char
String
Int
Integer
Float
Double
IO
Maybe
Either
Ordering
qualified
when
otherwise